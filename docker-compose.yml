version: "3.8"
services:
  db:
    image: "postgres:14-alpine"
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - postgresnet
    env_file: ./config/.env

  web:
    image: "parser_ozon:dev"
    build:
      target: development_build
      context: .
      dockerfile: ./docker/django/Dockerfile
      args:
        DJANGO_ENV: development
      cache_from:
        - "parser_ozon:dev"
        - "parser_ozon:latest"
    volumes:
      - django-static:/var/www/django/static
    depends_on:
      - db
    networks:
      - webnet
      - postgresnet
    env_file: ./config/.env
    environment:
      DJANGO_DATABASE_HOST: db

    command: python -Wd manage.py runserver 0.0.0.0:8000
    healthcheck:
      # We use `$$` here because:
      # one `$` goes to shell,
      # one `$` goes to `docker-compose.yml` escaping
      test: |
        /usr/bin/test $$(
          /usr/bin/curl --fail http://localhost:8000/health/?format=json
          --write-out "%{http_code}" --silent --output /dev/null
        ) -eq 200
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  # Network for postgres, use it for services that need access to the db:
  postgresnet:
  # Network for your internals, use it by default:
  webnet:

volumes:
  pgdata:
  django-static:
